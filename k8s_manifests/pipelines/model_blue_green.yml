pipeline:
  name: model_blue_green
  identifier: model_blue_green
  projectIdentifier: demo
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: create_namespace
        identifier: create_namespace
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  name: create_namespace
                  identifier: create_namespace
                  template:
                    templateRef: create_k8s_namespace
                    versionLabel: v1
                    templateInputs:
                      type: ShellScript
                      when: <+input>
        tags: {}
        variables:
          - name: NamespaceName
            type: String
            description: ""
            required: false
            value: preprod-<+pipeline.variables.service.replace('_', '-')>
    - stage:
        name: blue_green_deployment
        identifier: blue_green_deployment
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: <+pipeline.variables.service>
          environment:
            environmentRef: model_preprod
            deployToAll: false
            infrastructureDefinitions:
              - identifier: model_infra_preprod
                inputs:
                  identifier: model_infra_preprod
                  type: KubernetesDirect
                  spec:
                    namespace: preprod-<+pipeline.variables.service.replace('_', '-')>
          execution:
            steps:
              - step:
                  name: Stage Deployment
                  identifier: stageDeployment
                  type: K8sBlueGreenDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: HarnessApproval
                  name: approve_green
                  identifier: approve_green
                  spec:
                    approvalMessage: Please review the following information and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    isAutoRejectEnabled: false
                    approvers:
                      userGroups:
                        - pipeline_executors
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
                  timeout: 1d
                  failureStrategies:
                    - onFailure:
                        errors:
                          - ApprovalRejection
                        action:
                          type: StageRollback
              - step:
                  name: Swap primary with stage service
                  identifier: bgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
              - step:
                  type: HarnessApproval
                  name: approve_scale_down
                  identifier: approve_scale_down
                  spec:
                    approvalMessage: Please verify primary service and confirm scale down of staged service
                    includePipelineExecutionHistory: true
                    isAutoRejectEnabled: false
                    approvers:
                      userGroups:
                        - pipeline_executors
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
                  timeout: 1d
              - step:
                  type: K8sBlueGreenStageScaleDown
                  name: K8sBlueGreenStageScaleDown_1
                  identifier: K8sBlueGreenStageScaleDown_1
                  spec: {}
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Swap primary with stage service
                  identifier: rollbackBgSwapServices
                  type: K8sBGSwapServices
                  timeout: 10m
                  spec:
                    skipDryRun: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
  variables:
    - name: service
      type: String
      description: ""
      required: false
      value: <+input>.default(default).allowedValues(model_nginx)